/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagmentsystem;

import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Lushiya
 */
public class patientReport extends javax.swing.JFrame {

    Connection con, con1;
    PreparedStatement update, delete, insert;
    private Object DbUtils;

    /**
     * Creates new form patientReport
     */
    public patientReport() {
        initComponents();
        cCount.setEditable(false);
        yCount.setEditable(false);
        oCount.setEditable(false);
        mCount.setEditable(false);
    }

     public void showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
        reportDate.setText(sd.format(d));
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBtn = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        loadBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_patient = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        area = new javax.swing.JTextArea();
        totBtn = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        splitAgeBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        viewBtn = new javax.swing.JButton();
        printBtn = new javax.swing.JButton();
        reportDate = new javax.swing.JLabel();
        cCount = new javax.swing.JTextField();
        yCount = new javax.swing.JTextField();
        mCount = new javax.swing.JTextField();
        oCount = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        cTable = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        yTable = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        mTable = new javax.swing.JTable();
        jScrollPane6 = new javax.swing.JScrollPane();
        oTable = new javax.swing.JTable();
        male = new javax.swing.JLabel();
        female = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backBtn.setBackground(new java.awt.Color(88, 131, 176));
        backBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        backBtn.setForeground(new java.awt.Color(255, 255, 255));
        backBtn.setText("Back");
        backBtn.setAutoscrolls(true);
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(214, 234, 245));

        loadBtn.setBackground(new java.awt.Color(88, 131, 176));
        loadBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        loadBtn.setForeground(new java.awt.Color(255, 255, 255));
        loadBtn.setText("Load Patient Details");
        loadBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loadBtnActionPerformed(evt);
            }
        });

        Table_patient.setAutoCreateRowSorter(true);
        Table_patient.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        Table_patient.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Full Name", "Address", "Age", "Email", "Contact No", "Gender"
            }
        ));
        Table_patient.setRowHeight(22);
        jScrollPane1.setViewportView(Table_patient);

        area.setColumns(20);
        area.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        area.setRows(5);
        jScrollPane2.setViewportView(area);

        totBtn.setBackground(new java.awt.Color(88, 131, 176));
        totBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        totBtn.setForeground(new java.awt.Color(255, 255, 255));
        totBtn.setText("Total Registered Patients");
        totBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totBtnActionPerformed(evt);
            }
        });

        jTextField1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N

        splitAgeBtn.setBackground(new java.awt.Color(88, 131, 176));
        splitAgeBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        splitAgeBtn.setForeground(new java.awt.Color(255, 255, 255));
        splitAgeBtn.setText("Split patients into age groups");
        splitAgeBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                splitAgeBtnActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Young Adult (18 - 35) yrs :");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("Middle Age (36 - 55) yrs :");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("Children (1 - 17) yrs : ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("Older Adult (55 above) yrs :");

        viewBtn.setBackground(new java.awt.Color(88, 131, 176));
        viewBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        viewBtn.setForeground(new java.awt.Color(255, 255, 255));
        viewBtn.setText("View");
        viewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewBtnActionPerformed(evt);
            }
        });

        printBtn.setBackground(new java.awt.Color(88, 131, 176));
        printBtn.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        printBtn.setForeground(new java.awt.Color(255, 255, 255));
        printBtn.setText("Print");
        printBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printBtnActionPerformed(evt);
            }
        });

        reportDate.setForeground(new java.awt.Color(255, 255, 255));

        cCount.setBackground(new java.awt.Color(214, 234, 245));
        cCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        cCount.setForeground(new java.awt.Color(0, 0, 153));
        cCount.setBorder(null);

        yCount.setBackground(new java.awt.Color(214, 234, 245));
        yCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        yCount.setForeground(new java.awt.Color(0, 0, 153));
        yCount.setBorder(null);

        mCount.setBackground(new java.awt.Color(214, 234, 245));
        mCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        mCount.setForeground(new java.awt.Color(0, 0, 153));
        mCount.setBorder(null);

        oCount.setBackground(new java.awt.Color(214, 234, 245));
        oCount.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        oCount.setForeground(new java.awt.Color(0, 0, 153));
        oCount.setBorder(null);

        cTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        cTable.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        cTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient  Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        cTable.setGridColor(new java.awt.Color(153, 204, 255));
        cTable.setRowHeight(25);
        cTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        cTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        cTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cTableMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(cTable);

        yTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        yTable.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        yTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient  Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        yTable.setGridColor(new java.awt.Color(153, 204, 255));
        yTable.setRowHeight(25);
        yTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        yTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        yTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                yTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(yTable);

        mTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        mTable.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        mTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient  Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        mTable.setGridColor(new java.awt.Color(153, 204, 255));
        mTable.setRowHeight(25);
        mTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        mTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        mTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(mTable);

        oTable.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        oTable.setFont(new java.awt.Font("Cambria", 0, 14)); // NOI18N
        oTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient  Name", "Age"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        oTable.setGridColor(new java.awt.Color(153, 204, 255));
        oTable.setRowHeight(25);
        oTable.setSelectionBackground(new java.awt.Color(204, 204, 204));
        oTable.setSelectionForeground(new java.awt.Color(0, 0, 0));
        oTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                oTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(oTable);

        male.setForeground(new java.awt.Color(255, 255, 255));

        female.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addGap(15, 15, 15)
                                        .addComponent(jLabel3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(splitAgeBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 441, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addComponent(cCount, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(yCount, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(96, 96, 96))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mCount, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(oCount, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(totBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(48, 48, 48)
                                        .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(111, 111, 111)
                                        .addComponent(female, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(189, 189, 189)
                                        .addComponent(loadBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 447, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(35, 35, 35)
                                        .addComponent(reportDate, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 778, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 34, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(544, 544, 544)))
                .addGap(3, 3, 3)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 443, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(viewBtn)
                        .addGap(37, 37, 37)
                        .addComponent(printBtn)
                        .addGap(115, 115, 115)))
                .addGap(37, 37, 37))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(loadBtn)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(reportDate, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(male, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(totBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(female, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(35, 35, 35)
                        .addComponent(splitAgeBtn)
                        .addGap(27, 27, 27)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(yCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(oCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(mCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(viewBtn)
                            .addComponent(printBtn))))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(backBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loadBtnActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
            try {
                con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3308/channelingcenter", "root", "");
                Statement st = con.createStatement();
                String sql = "select * from patient";
                ResultSet rs = st.executeQuery(sql);

                while (rs.next()) {
                    //data will be added until finish
                    //String id = String.valueOf(rs.getInt("patientId"));
                    String fullname = rs.getString("fullName");
                    String address = rs.getString("address");
                    String age = String.valueOf(rs.getInt("age"));
                    String email = rs.getString("email");
                    String phone = rs.getString("contactNo");
                    String gender = rs.getString("gender");

                    String tbData[] = {fullname, address, age, email, phone, gender};
                    DefaultTableModel tblModel = (DefaultTableModel) Table_patient.getModel();

                    //add string array
                    tblModel.addRow(tbData);
                }
            } catch (SQLException ex) {
                Logger.getLogger(patientReport.class.getName()).log(Level.SEVERE, null, ex);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(patientReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_loadBtnActionPerformed

    private void totBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totBtnActionPerformed
        // TODO add your handling code here:
        try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(patientReport.class.getName()).log(Level.SEVERE, null, ex);
        }

        try {
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3308/channelingcenter", "root", "");
            update = (PreparedStatement) con.prepareStatement("select count(*) as patientCount from patient ");
            ResultSet rs = update.executeQuery();

            while (rs.next()) {
                int count = rs.getInt("patientCount");

                jTextField1.setText(String.valueOf(count));

            }

        } catch (SQLException ex) {
            Logger.getLogger(patientReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_totBtnActionPerformed

    private void splitAgeBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_splitAgeBtnActionPerformed
        // TODO add your handling code here:
                try {
            Class.forName("com.mysql.jdbc.Driver");
            con = (Connection) DriverManager.getConnection("jdbc:mysql://localhost:3308/channelingcenter", "root", "");

            //retrive the child count
            String sql2 = "select count(*) as child from patient where age BETWEEN 1 and 17";
            insert = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql2);
            ResultSet r2 = insert.executeQuery(sql2);
            r2.next();
            String childCount = r2.getString("child");
            cCount.setText(String.valueOf(childCount));
            
            //retrieve young adult count
            String sql3 = "select count(*) as young from patient where age BETWEEN 18 and 35";
            insert = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql3);
            ResultSet r3 = insert.executeQuery(sql3);
            r3.next();
            String youngCount = r3.getString("young");
            yCount.setText(String.valueOf(youngCount));
            
            //retrieve middle age count
            String sql4 = "select count(*) as middle from patient where age BETWEEN 36 and 55";
            insert = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql4);
            ResultSet r4 = insert.executeQuery(sql4);
            r4.next();
            String middleCount = r4.getString("middle");
            mCount.setText(String.valueOf(middleCount));
            
            //retrieve older adult count
            String sql5 = "select count(*) as older from patient where age > 55";
            insert = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql5);
            ResultSet r5 = insert.executeQuery(sql5);
            r5.next();
            String olderCount = r5.getString("older");
            oCount.setText(String.valueOf(olderCount));
            
            //retrieve male patient count
            String sql7 = "select count(*) as m from patient where gender = 'Male'";
            insert = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql5);
            ResultSet R2 = insert.executeQuery(sql7);
            R2.next();
            String malCount = R2.getString("m");
            male.setText(String.valueOf(malCount));
            
            //retrieve female patient count
            String sql6 = "select count(*) as f from patient where gender = 'Female'";
            insert = (com.mysql.jdbc.PreparedStatement) con.prepareStatement(sql5);
            ResultSet R1 = insert.executeQuery(sql6);
            R1.next();
            String fCount = R1.getString("f");
            female.setText(String.valueOf(fCount));
            
                insert = (PreparedStatement) con.prepareStatement("select fullName,age from patient where age between 1 and 17");
                ResultSet r6 = insert.executeQuery();
                ResultSetMetaData res = r6.getMetaData();
                int c = res.getColumnCount();
                DefaultTableModel df = (DefaultTableModel) cTable.getModel();
                df.setRowCount(0);

                while (r6.next()) {
                    Vector v2 = new Vector();
                    for (int a = 1; a <= c; a++) {
                        v2.add(r6.getString("fullName"));
                        v2.add(r6.getString("age"));
                    }
                    df.addRow(v2);
                }
                
                insert = (PreparedStatement) con.prepareStatement("select fullName,age from patient where age between 18 and 35");
                ResultSet r7 = insert.executeQuery();
                ResultSetMetaData res2 = r7.getMetaData();
                int c1 = res2.getColumnCount();
                DefaultTableModel df1 = (DefaultTableModel) yTable.getModel();
                df1.setRowCount(0);

                while (r7.next()) {
                    Vector v2 = new Vector();
                    for (int a = 1; a <= c1; a++) {
                        v2.add(r7.getString("fullName"));
                        v2.add(r7.getString("age"));
                    }
                    df1.addRow(v2);
                }
                
                insert = (PreparedStatement) con.prepareStatement("select fullName,age from patient where age between 36 and 54");
                ResultSet r8 = insert.executeQuery();
                ResultSetMetaData res3 = r8.getMetaData();
                int c2 = res3.getColumnCount();
                DefaultTableModel df2 = (DefaultTableModel) mTable.getModel();
                df2.setRowCount(0);

                while (r8.next()) {
                    Vector v2 = new Vector();
                    for (int a = 1; a <= c2; a++) {
                        v2.add(r8.getString("fullName"));
                        v2.add(r8.getString("age"));
                    }
                    df2.addRow(v2);
                }
                
                insert = (PreparedStatement) con.prepareStatement("select fullName,age from patient where age > 55");
                ResultSet r9 = insert.executeQuery();
                ResultSetMetaData res4 = r9.getMetaData();
                int c3 = res4.getColumnCount();
                DefaultTableModel df3 = (DefaultTableModel) oTable.getModel();
                df3.setRowCount(0);

                while (r9.next()) {
                    Vector v2 = new Vector();
                    for (int a = 1; a <= c3; a++) {
                        v2.add(r9.getString("fullName"));
                        v2.add(r9.getString("age"));
                    }
                    df3.addRow(v2);
                }
            
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(patientReport.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(patientReport.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_splitAgeBtnActionPerformed

    private void viewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewBtnActionPerformed
        // TODO add your handling code here:
        showDate();
        area.setText(area.getText()+"\t"+"       "+"UCC PATIENT HISTORY\n");
        area.setText(area.getText()+"\t"+"                  "+reportDate.getText()+"\n\n");

        area.setText(area.getText()+"------------------------------------------------------------------------------------------------------\n");
        area.setText(area.getText()+"  Category"+"\t"+"         Age range (yrs)"+"          "+"No of Patients"+"\n");
        area.setText(area.getText()+"-----------------------------------------------------------------------------------------------------------\n");
        area.setText(area.getText()+"  Children "+"\t          "+"  1 - 17"+"\t\t"+cCount.getText()+"\n");
        area.setText(area.getText()+"  Young Adult"+"\t          "+"  18 - 35"+"\t\t"+yCount.getText()+"\n");
        area.setText(area.getText()+"  Middle Age"+"\t          "+"  36 - 55"+"\t\t"+mCount.getText()+"\n");
        area.setText(area.getText()+"  Older Adult"+"\t         "+"  55 above"+"\t"+oCount.getText()+"\n\n");
        area.setText(area.getText()+"--------------------------------------------------------------------------------------------------------\n");
        area.setText(area.getText()+"\n  Total Registered Patients : "+jTextField1.getText()+"\n");
        area.setText(area.getText()+"  - Male : "+male.getText()+"\n");
        area.setText(area.getText()+"  - Female : "+female.getText()+"\n\n");
        
    }//GEN-LAST:event_viewBtnActionPerformed

    private void printBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printBtnActionPerformed
        // TODO add your handling code here:
        try {
            area.print();
        } catch (Exception e) {

        }
    }//GEN-LAST:event_printBtnActionPerformed

    private void cTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cTableMouseClicked
        // TODO add your handling code here:
        DefaultTableModel df = (DefaultTableModel) cTable.getModel();
        int selectedIndex = cTable.getSelectedRow();

        //        cName.setText(df.getValueAt(selectedIndex,1).toString());
        //        pname.setText(df.getValueAt(selectedIndex,0).toString());
        //        tok.setText(df.getValueAt(selectedIndex,2).toString());
        //        docAppFee.setText(df.getValueAt(selectedIndex,4).toString());
        //        aTime.setText(df.getValueAt(selectedIndex,5).toString());
        //        viewDate.setText(df.getValueAt(selectedIndex,6).toString());

        /*Date adate1;
        try{
            adate1=(Date) new SimpleDateFormat("yyyy-MM-dd").parse(df.getValueAt(selectedIndex, 6).toString());
            adate.setDate(adate1);

        }
        catch (ParseException ex) {
            Logger.getLogger(viewAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }*/
    }//GEN-LAST:event_cTableMouseClicked

    private void yTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_yTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_yTableMouseClicked

    private void mTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_mTableMouseClicked

    private void oTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_oTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_oTableMouseClicked

    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        // TODO add your handling code here:
         MainLoginUI patReg = new MainLoginUI();
        patReg.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(patientReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(patientReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(patientReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(patientReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new patientReport().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Table_patient;
    private javax.swing.JTextArea area;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField cCount;
    private javax.swing.JTable cTable;
    private javax.swing.JLabel female;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton loadBtn;
    private javax.swing.JTextField mCount;
    private javax.swing.JTable mTable;
    private javax.swing.JLabel male;
    private javax.swing.JTextField oCount;
    private javax.swing.JTable oTable;
    private javax.swing.JButton printBtn;
    private javax.swing.JLabel reportDate;
    private javax.swing.JButton splitAgeBtn;
    private javax.swing.JButton totBtn;
    private javax.swing.JButton viewBtn;
    private javax.swing.JTextField yCount;
    private javax.swing.JTable yTable;
    // End of variables declaration//GEN-END:variables
}
