/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hospitalmanagmentsystem;

import static com.sun.org.apache.xalan.internal.lib.ExsltDatetime.time;
import static com.sun.tools.javac.file.JavacFileManager.testName;
import java.awt.Color;
import java.awt.HeadlessException;
import java.awt.Image;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JSpinner;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import javax.swing.ImageIcon;
import javax.swing.Timer;


/**
 *
 * @author Anji
 */
public class labAppointment extends javax.swing.JFrame {

    Connection con1;
    PreparedStatement insert,delete;
    String tname;
    PreparedStatement pst = null;
    ResultSet rs = null;
    final String password = "";
    final String userName = "root";
    final String URL = "jdbc:mysql://localhost:3308/channelingcenter";

    
  

    /**
     * Creates new form labAppointment
     */
    public labAppointment() {
        initComponents();
//        setimg();
//        jPanel2.setBackground(new Color(255,255,255,120));
       try {
            //set connection
            Class.forName("com.mysql.jdbc.Driver");
            con1 = (Connection) DriverManager.getConnection(URL, userName, password);
       
        }catch (HeadlessException | ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Stock already exist!");



        }
       
        updateCombo();  
//        updateTestList();


    }
    
//    public void setimg(){
//        ImageIcon imageicon = new ImageIcon("C:\\Users\\singer\\Downloads\\user_roles\\user_roles\\icon14.png");
//        Image img = imageicon.getImage();
//        Image imgScale = img.getScaledInstance(backg.getWidth(),backg.getHeight(),Image.SCALE_FAST);
//        ImageIcon scaledIcon = new ImageIcon(imgScale);
//        backg.setIcon(scaledIcon);
//        
//    };
        //  labAppointmentsTable();
         
       

    
    
    

    public void showDate() {
        java.util.Date d = new java.util.Date();
        SimpleDateFormat sd = new SimpleDateFormat("yyyy-MM-dd");
        l_date.setText(sd.format(d));

    }

    public void showTime() {
        Calendar cal = new GregorianCalendar();

        int second = cal.get(Calendar.SECOND);
        int minute = cal.get(Calendar.MINUTE);
        int hour = cal.get(Calendar.HOUR);

        labAppTime.setText(hour + ":" + minute + ":" + second);
    }

//    private void updateTestList() {
//
//        testNameTxtField.getText();
//        try {
//
//            Class.forName("com.mysql.jdbc.Driver");
//
//            con1 = DriverManager.getConnection("jdbc:mysql://localhost/channelingcenter", "root", "");
//
//            insert = con1.prepareStatement("Select * from labtest");
//
//            ResultSet rs = insert.executeQuery();
//
//            while (rs.next()) {
//
//                tname = rs.getString("testName");
//                testNameTxtField.setText(tname);
//
//            }
//
//        } catch (SQLException ex) {
//
//            Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);
//
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);
//        }
//    }
    
     private void updateCombo(){
         try {

            testNameDropdown.removeAllItems();

            insert = con1.prepareStatement("select testName from labtest ");

            ResultSet result = insert.executeQuery();

            while (result.next()) {
                testNameDropdown.addItem(result.getString("testName"));

            }
        } catch (SQLException ex) {
            Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);

        }

     }

   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void table_update() {
        int c;

        try {

            insert = con1.prepareStatement("select * from patient");

            ResultSet rs = insert.executeQuery();
            ResultSetMetaData res = rs.getMetaData();
            c = res.getColumnCount();

            //    DefaultTableModel df=(DefaultTableModel) jTable1.getModel();
            //  df.setRowCount(0);
            while (rs.next()) {
                Vector v2 = new Vector();
                for (int a = 1; a <= c; a++) {
                    v2.add(rs.getString("patientId"));
                    v2.add(rs.getString("fullName"));
                    v2.add(rs.getString("contactNo"));

                }

                // df.addRow(v2);
            }
        } catch (SQLException ex) {
            Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);

        }

    }
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        contactNumberLabel = new javax.swing.JLabel();
        labAppTime = new javax.swing.JTextField();
        pNameLabel = new javax.swing.JLabel();
        testChargeTxtField = new javax.swing.JTextField();
        testNameLabel = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        testChargeLabel = new javax.swing.JLabel();
        pNameTxtfield = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        contactNumberTxtfield1 = new javax.swing.JTextField();
        l_date = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        deleteButton = new javax.swing.JButton();
        testNameDropdown = new javax.swing.JComboBox<>();
        jButton7 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel2.setBackground(new java.awt.Color(214, 234, 245));
        jPanel2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        contactNumberLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        contactNumberLabel.setText("Contact Number");

        labAppTime.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        labAppTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labAppTimeActionPerformed(evt);
            }
        });

        pNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pNameLabel.setText("Patient's Name");

        testChargeTxtField.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        testChargeTxtField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testChargeTxtFieldActionPerformed(evt);
            }
        });

        testNameLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        testNameLabel.setText("Test Name");

        jButton1.setBackground(new java.awt.Color(53, 92, 125));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel9.setText("Time:");

        jButton3.setBackground(new java.awt.Color(153, 204, 255));
        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("Search");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        testChargeLabel.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        testChargeLabel.setText("Test Charge");

        pNameTxtfield.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        pNameTxtfield.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pNameTxtfieldActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Date:");

        contactNumberTxtfield1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        contactNumberTxtfield1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                contactNumberTxtfield1ActionPerformed(evt);
            }
        });

        l_date.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        l_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                l_dateActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setText("Manage Lab Bill");

        deleteButton.setBackground(new java.awt.Color(53, 92, 125));
        deleteButton.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        deleteButton.setForeground(new java.awt.Color(255, 255, 255));
        deleteButton.setText("Delete");
        deleteButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteButtonMouseClicked(evt);
            }
        });
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        testNameDropdown.addPopupMenuListener(new javax.swing.event.PopupMenuListener() {
            public void popupMenuCanceled(javax.swing.event.PopupMenuEvent evt) {
            }
            public void popupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {
                testNameDropdownPopupMenuWillBecomeInvisible(evt);
            }
            public void popupMenuWillBecomeVisible(javax.swing.event.PopupMenuEvent evt) {
            }
        });
        testNameDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                testNameDropdownActionPerformed(evt);
            }
        });

        jButton7.setBackground(new java.awt.Color(53, 92, 125));
        jButton7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("Back");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton9.setForeground(new java.awt.Color(255, 255, 255));
        jButton9.setText("Logout");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(48, 48, 48)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(contactNumberLabel)
                            .addComponent(pNameLabel)
                            .addComponent(testNameLabel)
                            .addComponent(testChargeLabel)
                            .addComponent(jLabel9)
                            .addComponent(labAppTime, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(115, 175, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(27, 27, 27)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(testChargeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l_date, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(testNameDropdown, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(pNameTxtfield, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 152, Short.MAX_VALUE)
                                            .addComponent(contactNumberTxtfield1, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton3)))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(137, 137, 137)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(33, 33, 33)
                                .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(23, 23, 23)
                                .addComponent(jButton7, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(contactNumberLabel)
                    .addComponent(contactNumberTxtfield1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addGap(38, 38, 38)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pNameLabel)
                    .addComponent(pNameTxtfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(testNameLabel)
                    .addComponent(testNameDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(43, 43, 43)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(testChargeLabel)
                    .addComponent(testChargeTxtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jLabel1))
                .addGap(22, 22, 22)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labAppTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(jButton7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(45, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
         // TODO add your handling code here:
        labAssistantMain lab = new labAssistantMain();
        lab.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void pNameTxtfieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pNameTxtfieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pNameTxtfieldActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:

        pNameTxtfield.setText("");
        try {

            Class.forName("com.mysql.jdbc.Driver");

            Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3308/channelingcenter", "root", "");
            PreparedStatement insert = con1.prepareStatement("select fullName from patient where contactNo= ?");
            insert.setString(1, contactNumberTxtfield1.getText());
            ResultSet rs = insert.executeQuery();

            while (rs.next()) {

                pNameTxtfield.setText(rs.getString("fullName"));
            }
            showTime();
            showDate();

            if (contactNumberTxtfield1.getText().equals("")) {
                JOptionPane.showMessageDialog(this, "No patient record");
            }
        } catch (SQLException ex) {

            Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);

        } catch (ClassNotFoundException ex) {
            Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        
        String cno;
        String patientId;
        cno = contactNumberTxtfield1.getText();
        String pname = pNameTxtfield.getText();
        String tname = testNameDropdown.getSelectedItem().toString();
        String tcharge = testChargeTxtField.getText();
        String labtime = labAppTime.getText();
        String date = l_date.getText();

       
        try {
            
            try {

                Class.forName("com.mysql.jdbc.Driver");

                Connection con1 = DriverManager.getConnection("jdbc:mysql://localhost:3308/channelingcenter", "root", "");
                
                insert = con1.prepareStatement("SELECT patientId from patient where contactNo = ?");
                insert.setString(1, cno);

                ResultSet RESULT = insert.executeQuery();
                RESULT.next();
                String patid = RESULT.getString("patientId");
                
                insert = con1.prepareStatement("SELECT testId from labtest where testName = ?");
                insert.setString(1, tname);

                ResultSet RESULT1 = insert.executeQuery();
                RESULT1.next();
                String tid = RESULT1.getString("testId");
                //SimpleDateFormat sd1=new SimpleDateFormat("yyyy-MM-dd");
                //l_date.setText(sd1.format(date));

                String sql = "insert into labbook (lDate,time,testId,patientId) values(?,?,?,?)";
                insert = (PreparedStatement) con1.prepareStatement(sql);

                insert.setString(1, date);
                insert.setString(2, labtime);
                insert.setString(3, tid);
                insert.setString(4, patid);

                insert.executeUpdate();

                JOptionPane.showMessageDialog(this, "Lab Bill Added!");

             
            } catch (SQLException ex) {
                System.out.println(ex);
                JOptionPane.showMessageDialog(this, "Lab Bill is already Added");
                contactNumberTxtfield1.setText(null);
                pNameTxtfield.setText(null);
                testNameDropdown.setSelectedItem(null);
                testChargeTxtField.setText(null);
                labAppTime.setText(null);
                l_date.setText(null);
                Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(labAppointment.class.getName()).log(Level.SEVERE, null, ex);
            }
            
            
//        
//        
//             }
//
//            }
        } catch (Exception ex) {
            System.out.println(ex);

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void testChargeTxtFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testChargeTxtFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_testChargeTxtFieldActionPerformed

    private void labAppTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labAppTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_labAppTimeActionPerformed

    private void contactNumberTxtfield1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_contactNumberTxtfield1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_contactNumberTxtfield1ActionPerformed

    private void l_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_l_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_l_dateActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int response=JOptionPane.showConfirmDialog(this,"Do you really want to logout?","confirm",JOptionPane.YES_NO_OPTION,JOptionPane.QUESTION_MESSAGE);
        if(response==JOptionPane.YES_OPTION){
            LabAssistantLogin lab = new LabAssistantLogin();
            lab.setVisible(true);
            this.dispose();
        }
        else {

        }
    
    }//GEN-LAST:event_jButton9ActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
        // TODO add your handling code here:
        
//        try {
//            String pphone = contactNumberTxtfield1.getText();
//            String tname = testNameTxtField.getText();
//            
//            String sql2="SELECT patientId FROM patient WHERE fullName = '" + pphone+"'";
//            insert = (com.mysql.jdbc.PreparedStatement) con1.prepareStatement(sql2);
//
//            ResultSet r2 = insert.executeQuery(sql2);
//            r2.next();
//            String patient = r2.getString("patientId");
//            
//            String sql3="SELECT testId FROM labtest WHERE testName = '" + tname+"'";
//            insert = (com.mysql.jdbc.PreparedStatement) con1.prepareStatement(sql3);
//
//            ResultSet r3 = insert.executeQuery(sql3);
//            r3.next();
//            String tId = r3.getString("testId");
//
//            delete = con1.prepareStatement("DELETE FROM labbook where patientId = ? and testId = ?") ;
//            delete.setString(1,patient);
//            delete.setString(1,tId);
//            delete.executeUpdate();
//            
//            JOptionPane.showMessageDialog(null,"Lab booking is Deleted");
//
//           
//
//        }catch (SQLException ex) {
//            JOptionPane.showMessageDialog(null,"Cannot delete");
//        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void deleteButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteButtonMouseClicked
        // TODO add your handling code here:
        try {
            String pphone = contactNumberTxtfield1.getText();
            String tname = testNameDropdown.getSelectedItem().toString();
            
            String sql2="SELECT patientId FROM patient WHERE contactNo = '" +pphone+"'";
            insert = (com.mysql.jdbc.PreparedStatement) con1.prepareStatement(sql2);

            ResultSet r2 = insert.executeQuery(sql2);
            r2.next();
            String patient = r2.getString("patientId");
            
            String sql3="SELECT testId FROM labtest WHERE testName = '" +tname+"'";
            insert = (com.mysql.jdbc.PreparedStatement) con1.prepareStatement(sql3);

            ResultSet r3 = insert.executeQuery(sql3);
            r3.next();
            String tId = r3.getString("testId");

            delete = con1.prepareStatement("DELETE FROM labbook where patientId = ? and testId = ?") ;
            delete.setString(1,patient);
            delete.setString(2,tId);
            delete.executeUpdate();
            System.out.println("Error1");
            JOptionPane.showMessageDialog(null,"Lab booking is Deleted");

           

        }catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Cannot delete");
        }
    }//GEN-LAST:event_deleteButtonMouseClicked

    private void testNameDropdownPopupMenuWillBecomeInvisible(javax.swing.event.PopupMenuEvent evt) {//GEN-FIRST:event_testNameDropdownPopupMenuWillBecomeInvisible

        String item = (String)testNameDropdown.getSelectedItem();
        String sql = "select charge from labtest where testName=?";

        try {
            pst = con1.prepareStatement(sql);
            pst.setString(1, item);
            rs = pst.executeQuery();

            if(rs.next()) {
                testChargeTxtField.setText(rs.getString("charge"));
            }
        }catch(Exception e) {

        }

    }//GEN-LAST:event_testNameDropdownPopupMenuWillBecomeInvisible

    private void testNameDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_testNameDropdownActionPerformed
        
    
    }//GEN-LAST:event_testNameDropdownActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(labAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(labAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(labAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(labAppointment.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new labAppointment().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel contactNumberLabel;
    private javax.swing.JTextField contactNumberTxtfield1;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField l_date;
    private javax.swing.JTextField labAppTime;
    private javax.swing.JLabel pNameLabel;
    private javax.swing.JTextField pNameTxtfield;
    private javax.swing.JLabel testChargeLabel;
    private javax.swing.JTextField testChargeTxtField;
    private javax.swing.JComboBox<String> testNameDropdown;
    private javax.swing.JLabel testNameLabel;
    // End of variables declaration//GEN-END:variables
}
